{"mappings":"ACAA,SAAS,gBAAgB,CAAC,mBAAoB,KAC1C,IAAM,EAAoB,SAAS,cAAc,CAAC,sBAI5C,EAAa,CACf,KAAM,+FACN,MAAO,gGACP,KAAM,+FACN,QAAS,kGACT,GAAI,4FACR,EAEA,SAAS,EAAgB,CAAO,EAC5B,EAAkB,SAAS,CAAG,GAC9B,EAAQ,OAAO,CAAC,AAAC,IACb,IAAM,EAAiB,SAAS,aAAa,CAAC,WAExC,EAAS,EAAM,UAAU,EAAI,EAAM,UAAU,CAAC,MAAM,CAAG,EAAI,EAAM,UAAU,CAAC,EAAE,CAAC,GAAG,CAAG,sCAErF,EAAM,SAAS,aAAa,CAAC,MACnC,CAAA,EAAI,GAAG,CAAG,EAEV,IAAM,EAAQ,SAAS,aAAa,CAAC,KACrC,CAAA,EAAM,SAAS,CAAG,EAAM,KAAK,CAE7B,IAAM,EAAU,SAAS,aAAa,CAAC,IACvC,CAAA,EAAQ,SAAS,CAAG,EAAM,QAAQ,CAElC,IAAM,EAAW,SAAS,aAAa,CAAC,SACxC,CAAA,EAAS,SAAS,CAAG,YACrB,EAAS,SAAS,CAAC,GAAG,CAAC,iBACvB,EAAS,gBAAgB,CAAC,QAAS,IAAM,AAWjD,CAAA,SAAyB,CAAK,EAC1B,QAAQ,GAAG,CAAC,GAEZ,IAAM,EAAQ,SAAS,cAAc,CAAC,iBAChC,EAAa,SAAS,cAAc,CAAC,eACrC,EAAa,SAAS,cAAc,CAAC,eACrC,EAAe,SAAS,cAAc,CAAC,gBAE7C,CAAA,EAAW,SAAS,CAAG,EAAM,KAAK,CAElC,IAAM,EAAS,EAAM,UAAU,EAAI,EAAM,UAAU,CAAC,MAAM,CAAG,EAAI,EAAM,UAAU,CAAC,EAAE,CAAC,GAAG,CAAG,EAC3F,CAAA,EAAW,GAAG,CAAG,EAEjB,IAAM,EAAa,EAAM,GAAG,EAAI,EAAM,SAAS,EAAI,EACnD,CAAA,EAAa,SAAS,CAAG,EAAa,CAAC,SAAS,EAAE,EAAW,uCAAuC,CAAC,CAAG,wBAExG,EAAM,KAAK,CAAC,OAAO,CAAG,OAC1B,CAAA,EA5BiE,IAEzD,EAAe,WAAW,CAAC,GAC3B,EAAe,WAAW,CAAC,GAC3B,EAAe,WAAW,CAAC,GAC3B,EAAe,WAAW,CAAC,GAE3B,EAAkB,WAAW,CAAC,EAClC,EACJ,CAgCA,eAAe,EAAqB,CAAQ,EACxC,GAAI,CACA,IAAM,EAAW,MAAM,MAAM,CAAU,CAAC,EAAS,EACjD,GAAI,CAAC,EAAS,EAAE,CAAE,MAAM,AAAI,MAAM,+BAClC,IAAM,EAAO,MAAM,EAAS,IAAI,EAE5B,AAAwB,CAAA,IAAxB,EAAK,OAAO,CAAC,MAAM,CAEnB,SAAS,aAAa,CAAC,CAAC,oBAAoB,EAAE,EAAS,EAAE,CAAC,EAAE,aAAa,CAAC,MAAM,GAEhF,EAAgB,EAAK,OAAO,CAEpC,CAAE,MAAO,EAAO,CACZ,QAAQ,KAAK,CAAC,4BAA6B,GAC3C,EAAgB,EAAE,CACtB,CACJ,CA3BA,SAAS,aAAa,CAAC,cAAc,gBAAgB,CAAC,QAAS,KAC3D,SAAS,cAAc,CAAC,iBAAiB,KAAK,CAAC,OAAO,CAAG,MAC7D,GAEA,OAAO,gBAAgB,CAAC,QAAS,AAAC,IAC9B,IAAM,EAAQ,SAAS,cAAc,CAAC,gBAClC,CAAA,EAAM,MAAM,GAAK,GACjB,CAAA,EAAM,KAAK,CAAC,OAAO,CAAG,MAD1B,CAGJ,GAoBA,SAAS,aAAa,CAAC,cAAc,gBAAgB,CAAC,QAAS,AAAC,IAC/B,MAAzB,EAAM,MAAM,CAAC,OAAO,EAEpB,EADiB,EAAM,MAAM,CAAC,WAAW,CAAC,WAAW,GAG7D,GAEA,EAAqB,OACzB","sources":["<anon>","src/script.js"],"sourcesContent":["document.addEventListener(\"DOMContentLoaded\", ()=>{\n    const articlesContainer = document.getElementById(\"articles-container\");\n    const apiKey = \"uCkpPI7ACpvbtuSYz6bpaDNNT82cJbDG\";\n    const apiUrlBase = `https://api.nytimes.com/svc/topstories/v2/`;\n    const categories = {\n        home: `https://api.nytimes.com/svc/topstories/v2/home.json?api-key=uCkpPI7ACpvbtuSYz6bpaDNNT82cJbDG`,\n        world: `https://api.nytimes.com/svc/topstories/v2/world.json?api-key=uCkpPI7ACpvbtuSYz6bpaDNNT82cJbDG`,\n        arts: `https://api.nytimes.com/svc/topstories/v2/arts.json?api-key=uCkpPI7ACpvbtuSYz6bpaDNNT82cJbDG`,\n        science: `https://api.nytimes.com/svc/topstories/v2/science.json?api-key=uCkpPI7ACpvbtuSYz6bpaDNNT82cJbDG`,\n        us: `https://api.nytimes.com/svc/topstories/v2/us.json?api-key=uCkpPI7ACpvbtuSYz6bpaDNNT82cJbDG`\n    };\n    function displayArticles(stories) {\n        articlesContainer.innerHTML = \"\";\n        stories.forEach((story)=>{\n            const articleElement = document.createElement(\"article\");\n            const imgUrl = story.multimedia && story.multimedia.length > 0 ? story.multimedia[0].url : \"https://via.placeholder.com/300x200\";\n            const img = document.createElement(\"img\");\n            img.src = imgUrl;\n            const title = document.createElement(\"h1\");\n            title.innerText = story.title;\n            const summary = document.createElement(\"p\");\n            summary.innerText = story.abstract;\n            const readMore = document.createElement(\"button\");\n            readMore.innerText = \"Read More\";\n            readMore.classList.add(\"read-more-btn\");\n            readMore.addEventListener(\"click\", ()=>showFullArticle(story));\n            articleElement.appendChild(img);\n            articleElement.appendChild(title);\n            articleElement.appendChild(summary);\n            articleElement.appendChild(readMore);\n            articlesContainer.appendChild(articleElement);\n        });\n    }\n    function showFullArticle(story) {\n        console.log(story);\n        const modal = document.getElementById(\"article-modal\");\n        const modalTitle = document.getElementById(\"modal-title\");\n        const modalImage = document.getElementById(\"modal-image\");\n        const modalContent = document.getElementById(\"modal-content\");\n        modalTitle.innerText = story.title;\n        const imgUrl = story.multimedia && story.multimedia.length > 0 ? story.multimedia[0].url : \"\";\n        modalImage.src = imgUrl;\n        const articleUrl = story.url || story.short_url || \"\";\n        modalContent.innerHTML = articleUrl ? `<a href=\"${articleUrl}\" target=\"_blank\">Read Full Article</a>` : \"No content available.\";\n        modal.style.display = \"block\";\n    }\n    document.querySelector(\".close-btn\").addEventListener(\"click\", ()=>{\n        document.getElementById(\"article-modal\").style.display = \"none\";\n    });\n    window.addEventListener(\"click\", (event)=>{\n        const modal = document.getElementById(\"article-modal\");\n        if (event.target === modal) modal.style.display = \"none\";\n    });\n    async function loadCategoryArticles(category) {\n        try {\n            const response = await fetch(categories[category]);\n            if (!response.ok) throw new Error(\"Network response was not ok\");\n            const data = await response.json();\n            if (data.results.length === 0) document.querySelector(`.nav-links a[href=\"#${category}\"]`).parentElement.remove();\n            else displayArticles(data.results);\n        } catch (error) {\n            console.error(\"Fetching articles failed:\", error);\n            displayArticles([]);\n        }\n    }\n    document.querySelector(\".nav-links\").addEventListener(\"click\", (event)=>{\n        if (event.target.tagName === \"A\") {\n            const category = event.target.textContent.toLowerCase();\n            loadCategoryArticles(category);\n        }\n    });\n    loadCategoryArticles(\"home\");\n});\n\n//# sourceMappingURL=index.f87c57c4.js.map\n","document.addEventListener('DOMContentLoaded', () => {\r\n    const articlesContainer = document.getElementById('articles-container');\r\n    const apiKey = 'uCkpPI7ACpvbtuSYz6bpaDNNT82cJbDG'; \r\n    const apiUrlBase = `https://api.nytimes.com/svc/topstories/v2/`;\r\n\r\n    const categories = {\r\n        home: `https://api.nytimes.com/svc/topstories/v2/home.json?api-key=uCkpPI7ACpvbtuSYz6bpaDNNT82cJbDG`,\r\n        world: `https://api.nytimes.com/svc/topstories/v2/world.json?api-key=uCkpPI7ACpvbtuSYz6bpaDNNT82cJbDG`,\r\n        arts: `https://api.nytimes.com/svc/topstories/v2/arts.json?api-key=uCkpPI7ACpvbtuSYz6bpaDNNT82cJbDG`,\r\n        science: `https://api.nytimes.com/svc/topstories/v2/science.json?api-key=uCkpPI7ACpvbtuSYz6bpaDNNT82cJbDG`,\r\n        us: `https://api.nytimes.com/svc/topstories/v2/us.json?api-key=uCkpPI7ACpvbtuSYz6bpaDNNT82cJbDG`\r\n    };\r\n\r\n    function displayArticles(stories) {\r\n        articlesContainer.innerHTML = '';\r\n        stories.forEach((story) => {\r\n            const articleElement = document.createElement('article');\r\n    \r\n            const imgUrl = story.multimedia && story.multimedia.length > 0 ? story.multimedia[0].url : 'https://via.placeholder.com/300x200'; \r\n    \r\n            const img = document.createElement('img');\r\n            img.src = imgUrl; \r\n    \r\n            const title = document.createElement('h1');\r\n            title.innerText = story.title;\r\n    \r\n            const summary = document.createElement('p');\r\n            summary.innerText = story.abstract;\r\n    \r\n            const readMore = document.createElement('button');\r\n            readMore.innerText = 'Read More';\r\n            readMore.classList.add('read-more-btn');\r\n            readMore.addEventListener('click', () => showFullArticle(story));\r\n    \r\n            articleElement.appendChild(img);\r\n            articleElement.appendChild(title);\r\n            articleElement.appendChild(summary);\r\n            articleElement.appendChild(readMore);\r\n    \r\n            articlesContainer.appendChild(articleElement);\r\n        });\r\n    }\r\n    \r\n    function showFullArticle(story) {\r\n        console.log(story);\r\n\r\n        const modal = document.getElementById('article-modal');\r\n        const modalTitle = document.getElementById('modal-title');\r\n        const modalImage = document.getElementById('modal-image');\r\n        const modalContent = document.getElementById('modal-content');\r\n    \r\n        modalTitle.innerText = story.title;\r\n    \r\n        const imgUrl = story.multimedia && story.multimedia.length > 0 ? story.multimedia[0].url : '';\r\n        modalImage.src = imgUrl; \r\n    \r\n        const articleUrl = story.url || story.short_url || ''; \r\n        modalContent.innerHTML = articleUrl ? `<a href=\"${articleUrl}\" target=\"_blank\">Read Full Article</a>` : 'No content available.';\r\n    \r\n        modal.style.display = 'block';\r\n    }    \r\n\r\n    document.querySelector('.close-btn').addEventListener('click', () => {\r\n        document.getElementById('article-modal').style.display = 'none';\r\n    });\r\n\r\n    window.addEventListener('click', (event) => {\r\n        const modal = document.getElementById('article-modal');\r\n        if (event.target === modal) {\r\n            modal.style.display = 'none';\r\n        }\r\n    });\r\n\r\n    async function loadCategoryArticles(category) {\r\n        try {\r\n            const response = await fetch(categories[category]);\r\n            if (!response.ok) throw new Error('Network response was not ok');\r\n            const data = await response.json();\r\n\r\n            if (data.results.length === 0) {\r\n\r\n                document.querySelector(`.nav-links a[href=\"#${category}\"]`).parentElement.remove();\r\n            } else {\r\n                displayArticles(data.results); \r\n            }\r\n        } catch (error) {\r\n            console.error('Fetching articles failed:', error);\r\n            displayArticles([]);\r\n        }\r\n    }\r\n\r\n    document.querySelector('.nav-links').addEventListener('click', (event) => {\r\n        if (event.target.tagName === 'A') {\r\n            const category = event.target.textContent.toLowerCase(); \r\n            loadCategoryArticles(category);\r\n        }\r\n    });\r\n\r\n    loadCategoryArticles('home'); \r\n});\r\n"],"names":["document","addEventListener","articlesContainer","getElementById","categories","home","world","arts","science","us","displayArticles","stories","innerHTML","forEach","story","articleElement","createElement","imgUrl","multimedia","length","url","img","src","title","innerText","summary","abstract","readMore","classList","add","showFullArticle","console","log","modal","modalTitle","modalImage","modalContent","articleUrl","short_url","style","display","appendChild","loadCategoryArticles","category","response","fetch","ok","Error","data","json","results","querySelector","parentElement","remove","error","window","event","target","tagName","textContent","toLowerCase"],"version":3,"file":"index.f87c57c4.js.map"}